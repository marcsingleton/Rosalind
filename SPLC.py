"""RNA Splicing.

Given: A DNA string s (of length at most 1 kbp) and a collection of substrings of s acting as introns. All strings are
given in FASTA format.

Return: A protein string resulting from transcribing and translating the exons of s. (Note: Only one solution will exist
for the dataset provided.)
"""

import os

from utils import read_fasta

data = """\
>Rosalind_8174
ATGAGCGCGCGGCCACGTTACCTAGTCGGAACTTGTTACCATACAAGGAGACGGGCAACT
AGCATCCAAAGCATGTGTTAGAGATACATACCGCCTTCAACCTCCGCCGATTCATGAAGT
CTCTGAACCACTCCAACCAGGTTGGGGAACCCCTGAAGTTTGGCCCTGCATATTCTCAAG
CTACCCGGAATGACTATGCCCCAAATTGCAAGGACGAAGTATCTTCTTCTAACAGCACGA
TAAATTCCTCGATTCAGTAGCAGTCAACGGACTACGGCAGAGGATGCCTATTGCTCTCTG
AATCCTCCTCTTTCAAGTCTCGGTGCCATTAATTGGGAAACTGTGCGATAGCAGGTGTAT
GATTGTCCAACTTCAAATAGCGAGGTTAAGGGGGGGACGACCCTGGACTCAACCAGCTAA
ATTAGGAGCCCACCAGGAGTCTGGCCAAGAGCGGGCGTGTTACCCCACATATACTCCGGG
TGCATCCACGACTGGAGGAAGTCGTCCACCCCCGCTGGCGATCCAAACTGATATGTCACG
AAGAAGTGGTCGAGTGTCTTACGTTTAGTACCCTATTGGCTCTTGTCCGCCTCGGTAAAA
GAGACAGTCGGGTGCGTATCACCGACATCGAGTGGACTGTCAAGGTTCCAGGTAGGAAAA
GTAGTTCTCTTCCGACCCCGACAATGGTTCTATCAGATGCCATGTGATCAAGCCCGCTGG
GATCAGTTAGACCCTCCCTGTTTCTAGGGTTGCTTACGCAAAAGAAAGTACCCTGTTTCA
TCCCCGCCAGACCAAAGGGATTTTCAAATTTTGGTAGGACAGCTCGTGCTCGAGTAGTCT
CCCACTAAACGGGTAACCCTACTTGTGGTCCAAACTAGGCCGCAGCTTTCGCAGATGCAA
TACCCCAAGGTCTGCGTTCCTAGCTAGCTGA
>Rosalind_2489
ATCCAAAGCATGTGTTAGAGATACATACCGCCTTCAACCTCCGC
>Rosalind_8255
CCCTATTGGCTCTTGTCCGCCTCGGTAAA
>Rosalind_1512
CTCTGAATCCTCCTCTTTCAAGTC
>Rosalind_5525
ACGACCCTGGACTCAACCA
>Rosalind_9515
GAGTGGACTGTCAAGGTTCCAGGTA
>Rosalind_6614
AATTTTGGTAGGACAGCTCGTGCTCGAGTAGTCTCCC
>Rosalind_3551
CGCTGGGATCAGTTAGACCCTCCCTGTTTCTAGGGTTGCTTACGCAAAAG
>Rosalind_0572
GCGATCCAAACTGATATGTCACGAAGAAGTGG
>Rosalind_3601
CAAACTAGGCCGCAGCTTTCGC
>Rosalind_3600
GTATCTTCTTCTAACAGCACGATAAA
>Rosalind_2577
GTTGGGGAACCCCTGAAGTTTGGCCCT
>Rosalind_2990
TACCCCACATAT
>Rosalind_4389
CAACTTCAAATAGC
"""

data_path = 'SPLC.txt'
with open(data_path, 'w') as file:
    file.write(data)

fasta = list(read_fasta(data_path))

_, seq = fasta[0]
for _, intron in fasta[1:]:
    index = seq.find(intron)
    seq = seq[:index] + seq[index+len(intron):]
seq = seq.replace('T', 'U')

gencode = {}
with open('constants/codons.txt') as file:
    for line in file:
        keyvals = line.rstrip().split('\t')
        for keyval in keyvals:
            codon, aa = keyval.split()
            gencode[codon] = aa

aas = []
for i in range(0, len(seq) - 3, 3):
    codon = seq[i:i+3]
    aas.append(gencode[codon])
print(''.join(aas))

os.remove(data_path)
